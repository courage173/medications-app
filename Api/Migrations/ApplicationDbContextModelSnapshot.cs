// <auto-generated />
using Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Api.Models.ATCCodes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ATCCodes");
                });

            modelBuilder.Entity("Api.Models.ActiveIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ActiveIngredientId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActiveIngredientId");

                    b.ToTable("ActiveIngredient");
                });

            modelBuilder.Entity("Api.Models.Classification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Classifications");
                });

            modelBuilder.Entity("Api.Models.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ATCCodeId")
                        .HasColumnType("int");

                    b.Property<int>("ClassificationId")
                        .HasColumnType("int");

                    b.Property<string>("CompetentAuthorityStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PharmaceuticalFormId")
                        .HasColumnType("int");

                    b.Property<int>("TherapeuticClassId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ATCCodeId");

                    b.HasIndex("ClassificationId");

                    b.HasIndex("PharmaceuticalFormId");

                    b.HasIndex("TherapeuticClassId");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("Api.Models.MedicationActiveIngredients", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActiveIngredientId")
                        .HasColumnType("int");

                    b.Property<int>("MedicationId")
                        .HasColumnType("int");

                    b.Property<string>("dosage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActiveIngredientId");

                    b.HasIndex("MedicationId");

                    b.ToTable("MedicationActiveIngredients");
                });

            modelBuilder.Entity("Api.Models.PharmaceuticalForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Form")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PharmaceuticalFormId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PharmaceuticalFormId");

                    b.ToTable("PharmaceuticalForms");
                });

            modelBuilder.Entity("Api.Models.TherapeuticClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TherapeuticClasses");
                });

            modelBuilder.Entity("Api.Models.ActiveIngredient", b =>
                {
                    b.HasOne("Api.Models.ActiveIngredient", null)
                        .WithMany("MedicationActiveIngredients")
                        .HasForeignKey("ActiveIngredientId");
                });

            modelBuilder.Entity("Api.Models.Medication", b =>
                {
                    b.HasOne("Api.Models.ATCCodes", "ATCCodes")
                        .WithMany()
                        .HasForeignKey("ATCCodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.Classification", "Classification")
                        .WithMany()
                        .HasForeignKey("ClassificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.PharmaceuticalForm", "PharmaceuticalForm")
                        .WithMany()
                        .HasForeignKey("PharmaceuticalFormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.TherapeuticClass", "TherapeuticClass")
                        .WithMany()
                        .HasForeignKey("TherapeuticClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ATCCodes");

                    b.Navigation("Classification");

                    b.Navigation("PharmaceuticalForm");

                    b.Navigation("TherapeuticClass");
                });

            modelBuilder.Entity("Api.Models.MedicationActiveIngredients", b =>
                {
                    b.HasOne("Api.Models.ActiveIngredient", "ActiveIngredient")
                        .WithMany()
                        .HasForeignKey("ActiveIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Api.Models.Medication", "Medication")
                        .WithMany("MedicationActiveIngredients")
                        .HasForeignKey("MedicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActiveIngredient");

                    b.Navigation("Medication");
                });

            modelBuilder.Entity("Api.Models.PharmaceuticalForm", b =>
                {
                    b.HasOne("Api.Models.PharmaceuticalForm", null)
                        .WithMany("MedicationPharmaceuticalForms")
                        .HasForeignKey("PharmaceuticalFormId");
                });

            modelBuilder.Entity("Api.Models.ActiveIngredient", b =>
                {
                    b.Navigation("MedicationActiveIngredients");
                });

            modelBuilder.Entity("Api.Models.Medication", b =>
                {
                    b.Navigation("MedicationActiveIngredients");
                });

            modelBuilder.Entity("Api.Models.PharmaceuticalForm", b =>
                {
                    b.Navigation("MedicationPharmaceuticalForms");
                });
#pragma warning restore 612, 618
        }
    }
}
